/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define TOP     3

/ {
    combos {
        compatible = "zmk,combos";

        QW-escape {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };
    };

    behaviors {
        qq: qq {
            compatible = "zmk,behavior-mod-morph";
            label = "QQ";
            bindings = <&kp Q>, <&kp EXCLAMATION>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        ww: ww {
            compatible = "zmk,behavior-mod-morph";
            label = "WW";
            bindings = <&kp W>, <&kp AT_SIGN>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        ee: ee {
            compatible = "zmk,behavior-mod-morph";
            label = "EE";
            bindings = <&kp E>, <&kp HASH>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        rr: rr {
            compatible = "zmk,behavior-mod-morph";
            label = "RR";
            bindings = <&kp R>, <&kp DOLLAR>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        tt: tt {
            compatible = "zmk,behavior-mod-morph";
            label = "TT";
            bindings = <&kp T>, <&kp PERCENT>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        yy: yy {
            compatible = "zmk,behavior-mod-morph";
            label = "YY";
            bindings = <&kp Y>, <&kp CARET>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        uu: uu {
            compatible = "zmk,behavior-mod-morph";
            label = "UU";
            bindings = <&kp U>, <&kp AMPERSAND>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        ii: ii {
            compatible = "zmk,behavior-mod-morph";
            label = "II";
            bindings = <&kp I>, <&kp ASTERISK>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        oo: oo {
            compatible = "zmk,behavior-mod-morph";
            label = "OO";
            bindings = <&kp O>, <&kp LEFT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };

        pp: pp {
            compatible = "zmk,behavior-mod-morph";
            label = "PP";
            bindings = <&kp P>, <&kp RIGHT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL|MOD_LALT|MOD_LSFT|MOD_LGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none      &kp Q  &kp W  &kp E  &kp R    &kp T        &kp Y      &kp U      &kp I      &kp O    &kp P     &none
&kp GRAVE  &kp A  &kp S  &kp D  &kp F    &kp G        &kp H      &kp J      &kp K      &kp L    &kp SEMI  &none
&none      &kp Z  &kp X  &kp C  &kp V    &kp B        &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &none
                         &mo 1  &kp TAB  &kp SPACE    &kp SPACE  &kp ENTER  &mo 2
            >;
        };

        left_signs_layer {
            bindings = <
&trans  &kp LS(EXCL)    &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)       &kp LS(PRCNT)    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_BRACE  &kp LBKT    &kp RBKT       &kp RIGHT_BRACE    &kp BSLH         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp UNDERSCORE  &kp EQUAL   &kp SQT        &kp DOUBLE_QUOTES  &kp PIPE         &trans  &trans  &trans  &trans  &trans  &trans
                                    &trans         &trans             &trans           &trans  &trans  &trans
            >;
        };

        right_signs_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp CARET             &kp AMPERSAND         &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp LEFT              &kp DOWN              &kp UP        &kp RIGHT             &kp PLUS               &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOL_DN  &kp C_VOL_UP          &kp MINUS              &trans
                        &trans  &trans  &trans    &trans                &trans                &trans
            >;
        };

        numbers {
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        numbers {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
